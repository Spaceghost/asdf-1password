#!/usr/bin/env bash

set -e
set -o pipefail

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version  }
TMPDIR=${TMPDIR:-/tmp}
[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)
(which unzip >/dev/null) || (>&2 echo 'unzip is needed to install 1password' && exit 1)

successfully() {
  $*
  if [[ $? != 0 ]]; then
    exit 1
  fi
}

install_op() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local bin_install_path="$install_path/bin"
  local download_url="$(get_download_url $version)"

  mkdir -p "${bin_install_path}"

  local bin_path="${bin_install_path}/op"
  local zip_path="${bin_install_path}/op.zip"
  local sig_path="${bin_install_path}/op.sig"
  echo "Downloading op from ${download_url}"

  successfully curl -s "$download_url" -o "$zip_path"
  successfully unzip $zip_path -d $bin_install_path
  rm $zip_path $sig_path
  chmod +x $bin_path
}

get_arch() {
  uname | tr '[:upper:]' '[:lower:]'
}

get_download_url() {
  local version="$1"
  local platform="$(get_arch)"
  echo "https://cache.agilebits.com/dist/1P/op/pkg/v${version}/op_${platform}_amd64_v${version}.zip"
}

install_op $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
